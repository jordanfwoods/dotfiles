#######
# JFW #
#######

# run-shell "tmux rename-session -t0 `$(echo $ES_PROJECT | cut -d'/' -f5-)`"
# run-shell "tmux rename-window  -t0 main"

# VIM is the goat
set-window-option -g mode-keys vi

bind C-b send-prefix

# Select Panes with vimkeys
bind-key   -r h select-pane -L
bind-key   -r j select-pane -D
bind-key   -r k select-pane -U
unbind-key l
bind-key   -r l select-pane -R
# I mapped over 'l', so bind l command to Ctrl-l.
bind-key M-l last-window
# u key reverts to default key mappings if there was a conflict.
## bind-key u   unbind-key l \; bind-key l last-window \; \
##              unbind-key r \; bind-key r refresh client \; \
## bind-key U   unbind-key l \; bind-key l select -R \; \
# unbind-key r \; bind-key r source-file ~/.tmux.conf \; display "Reloaded ~/.tmux.conf" \; \

bind-key -r C-h resize-pane -L 5
bind-key -r C-j resize-pane -D 5
bind-key -r C-k resize-pane -U 5
bind-key -r C-l resize-pane -R 5

# Turn on / off the mouse
bind-key C-m set-option -g mouse \; display-message 'Mouse #{?mouse,on,off}'
# Add / Remove the Pane border
bind-key C-z set-option -g pane-border-status \; display-message 'Pane Border: #{pane-border-status}'

# Swap current pane with marked pane (C-b m to mark pane).
bind-key C-s swap-pane

# Don't allow <Up> to be recursive, so that I can immediately search through history
unbind-key Up
bind-key Up select-pane -U

##################
# tmux 1.8 stuff #
##################

run-shell 'tmux setenv -g TMUX_VERSION $(tmux -V | \
                           sed -En "s/^tmux[^0-9]*([.0-9]+).*/\1/p")'

# Make Copy Mode allow for system clipboard stuff <3
if-shell -b '[ `tmux -V | cut -d" " -f2 | tr -d " |\-|.|[:alpha:]"` -lt 24 ]' \
   'setw -g mode-keys vi; \
    bind-key -t vi-copy v begin-selection; \
    bind-key -t vi-copy v   begin-selection; \
    bind     -t vi-copy y   copy-pipe "xclip -in -selection clipboard"; \
    bind-key -t vi-copy C-v rectangle-toggle; \
    setw -g mode-mouse          on; \
    set  -g mouse-select-window on; \
    set  -g mouse-select-pane   on; \
    set  -g mouse-resize-pane   on; \
    set  -g mouse-utf           on'

# for tmux newer than version 2.4
if-shell -b '[ `tmux -V | cut -d" " -f2 | tr -d " |\-|.|[:alpha:]"` -gt 24 ]' \
   'set-window-option -g mode-keys vi; \
    bind-key -T copy-mode-vi v send-keys -X begin-selection; \
    bind-key -T copy-mode-vi y send-keys -X copy-selection; \
    set-option -g mouse on;'
    # setw -g mouse; \
    # set  -g mouse-select-window on'
    # set  -g mouse-select-pane   on; \
    # set  -g mouse-resize-pane   on; \
    # set  -g mouse-utf           on'
    # setw -g mode-mouse          on; \
    # set  -g mouse-select-window on; \
    # set  -g mouse-select-pane   on; \
    # set  -g mouse-resize-pane   on; \
    # set  -g mouse-utf           on'

# Set that stupid Esc-Wait off, so VI works again
set -sg escape-time 0

# Use 256 colors
set  -g default-terminal "xterm-256color"
# set-option -a terminal-overrides ",xterm-256color:RGB"
# set-option -a terminal-overrides ",*256col*:RGB"
# set-option -a terminal-overrides ",alacritty:RGB"

# Start numbering at 1 for panes, windows, etc
set  -g base-index          1
setw -g pane-base-index     1
set  -g renumber-windows    on

# probably unnecessary stuff
set        -g allow-rename       off
set        -g history-limit      5000
set        -g display-panes-time 1500

# Reload the config.
bind r source-file ~/.tmux.conf \; display "Reloaded ~/.tmux.conf"
# bind v if-shell 'test -n $(tmux -V) ' && display "Hello World"

# Set panel title - I don't really care about the Panel Title
# bind t command-prompt -p "Panel title:" "send-keys 'printf \"'\\033]2;%%\\033\\\\'\"' C-m"

# Do not load them if remote, since it's probably a nested tmux and I want an
# easy way to differentiate the two
if-shell 'test -z "$SSH_CLIENT" && test -f ~/.tmux/tmux-theme.conf' "source-file ~/.tmux/tmux-theme.conf"
bind @ if-shell 'test -n "$SSH_CLIENT" || ! test -f ~/.tmux/tmux-theme.conf' "display \"Couldn't Find ~/.tmux/tmux-theme.conf\""
bind ` if-shell 'test -z "$SSH_CLIENT" &&   test -f ~/.tmux/tmux-theme.conf' "display \"Found ~/.tmux/tmux-theme.conf\""

########
# TEMP #
########
